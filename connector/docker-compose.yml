version: '3.5'
services:
  nginx:
    build: ./nginx
    depends_on:
      - odc-frontend
      - odc-manager
    ports:
      - 60080:80
    networks:
      - ids_connector

  odc-adapter-ckan:
    build: ./odc-adapter-ckan
#    container_name: odc-adapter-ckan
    volumes:
      - odc-adapter-ckan_repo:/ids/repo
    depends_on:
      - odc-config-manager
    environment:
      - REPOSITORY=/ids/repo/
      - CONFIG_MANAGER_PORT=8080
      - CONFIG_MANAGER_HOST=odc-config-manager
      - ROUTE_ALIAS=odc-adapter-ckan
    networks:
      - ids_connector

  odc-adapter-postgres:
    build: ./odc-adapter-postgres
#    container_name: odc-adapter-postgres
    volumes:
      - odc-adapter-postgres_repo:/ids/repo
    depends_on:
      - odc-config-manager
    environment:
      - REPOSITORY=/ids/repo/
      - CONFIG_MANAGER_PORT=8080
      - CONFIG_MANAGER_HOST=odc-config-manager
      - ROUTE_ALIAS=odc-adapter-postgres
    networks:
      - ids_connector

  odc-config-manager:
    build: ./odc-config-manager
    volumes:
      - odc-config-manager_repo:/ids/repo
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8091:8080
    environment:
      - REPOSITORY=/ids/repo/
      - INIT=true
      - SERVICE_PORT=8080
      - DOCKER_SERVICE_PORT=8080
      - DOCKER_SERVICE_HOST=odc-service-docker
      - API_KEY=yourapikey
    networks:
      - ids_connector
      - ids_docker

  odc-service-docker:
    build: ./odc-service-docker
    volumes:
      - odc-service-docker_repo:/ids/repo
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REPOSITORY=/ids/repo/
      - INIT=true
      - SERVICE_PORT=8080
    networks:
      - ids_docker

  odc-postgres:
    build: ./odc-postgres
    volumes:
      - odc-manager-database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=123456
      - DATABASE_USER=ids
      - DATABASE_USER_PW=ids
    networks:
      - ids_connector

  odc-manager:
    build: ./odc-manager
    volumes:
      - odc-manager_repo:/ids/repo
      - ./config/certs:/ids/certs
    depends_on:
      - odc-postgres
    environment:
      - FRONTEND_CONFIG={"username":"admin","password":"admin"}
      - DB_CONFIG={"host":"odc-postgres","port":5432,"database":"ids","user":"ids","password":"ids"}
      - CONFIG_MANAGER_CONFIG={"apikey":"yourapikey", "host":"odc-config-manager","port":8080}
      - AUTH_CONFIG={"keystorename":"test-cert-keystore.jks", "keystorepassword":"123456", "keystorealias":"1","truststorename":"test-cert-truststore.jks","dapsurl":"https://auth.mgds.xnor.ga/v2/", "dapsissuer":"https://auth.mgds.xnor.ga"}
      - REPOSITORY=/ids/repo/
      - INIT=true
      - SERVICE_PORT=8080
    networks:
      - ids_connector

  odc-frontend:
    build: ./odc-frontend
    environment:
      - VUE_APP_BACKEND_BASE_URL=https://connector.mgds.xnor.ga/browse/
      - VUE_APP_TITLE=MGDS IDS ODC
    networks:
      - ids_connector

volumes:
  odc-adapter-ckan_repo:
  odc-adapter-postgres_repo:
  odc-config-manager_repo:
  odc-manager-database:
  odc-manager_repo:
  odc-service-docker_repo:

networks:
  ids_connector:
    name: ids_connector
  ids_docker:
    name: ids_docker
